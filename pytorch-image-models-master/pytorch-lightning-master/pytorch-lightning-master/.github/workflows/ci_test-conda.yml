name: PyTorch & Conda

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches: [master, "release/*"]  # include release branches like release/1.0.x
  pull_request:
    branches: [master, "release/*"]

jobs:
  conda:
    runs-on: ubuntu-20.04
    container: pytorchlightning/pytorch_lightning:base-conda-py${{ matrix.python-version }}-torch${{ matrix.pytorch-version }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-20.04]
        python-version: [3.7]
        pytorch-version: [1.3, 1.4, 1.5, 1.6, 1.7, 1.8]

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 35
    steps:
    - uses: actions/checkout@v2

    - name: Update dependencies
      run: |
        conda info
        conda list
        pip install --requirement requirements/devel.txt --upgrade-strategy only-if-needed
        pip list

    - name: Cache datasets
      # todo this probably does not work with docker images, rather cache dockers
      uses: actions/cache@v2
      with:
        path: Datasets # This path is specific to Ubuntu
        # Look to see if there is a cache hit for the corresponding requirements file
        key: pl-dataset

    - name: Tests
      run: |
        # NOTE: run coverage on tests does not propagare faler status for Win, https://github.com/nedbat/coveragepy/issues/1003
        python -m pytest pytorch_lightning tests -v --durations=50 --junitxml=junit/test-results-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}.xml
        # coverage report
      shell: bash -l {0}

    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}
        path: junit/test-results-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requires }}.xml
      if: failure()
