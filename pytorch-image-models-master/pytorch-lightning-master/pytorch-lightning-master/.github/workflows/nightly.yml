name: Nightly events

# https://jasonet.co/posts/scheduled-actions/
on:
  schedule:
    # At the end of every day
    - cron: "0 0 * * *"

# based on https://github.com/pypa/gh-action-pypi-publish
jobs:

  pypi-release:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: >-
        python -m pip install --user --upgrade setuptools wheel

    - name: Build packages
      run: |
        python .github/prepare-nightly_version.py
        python setup.py sdist bdist_wheel
        ls -lh dist/

    - name: Delay releasing
      if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
      uses: juliangruber/sleep-action@v1
      with:
        time: 5m

      # We do this, since failures on test.pypi aren't that bad
    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.4.1
      with:
        user: __token__
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
        verbose: true

  docker-XLA:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.6, 3.7]
        xla_version: [1.6, 1.7]  # todo: , "nightly"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/docker/setup-buildx-action
      # Set up Docker Buildx - to use cache-from and cache-to argument of buildx command
      - uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish XLA to Docker Hub
        # publish master/release
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            XLA_VERSION=${{ matrix.xla_version }}
          cache-from: pytorchlightning/pytorch_lightning:base-xla-py${{ matrix.python_version }}-torch${{ matrix.xla_version }}
          cache-to: type=inline
          file: dockers/base-xla/Dockerfile
          push: true
          tags: pytorchlightning/pytorch_lightning:base-xla-py${{ matrix.python_version }}-torch${{ matrix.xla_version }}
        timeout-minutes: 55

  docker-cuda-conda:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.6, 3.7, 3.8]
        pytorch_version: [1.3, 1.4, 1.5, 1.6, 1.7, 1.8]
        exclude:
          # excludes PT 1.3 as it is missing on pypi
          - python_version: 3.8
            pytorch_version: 1.3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/docker/setup-buildx-action
      # Set up Docker Buildx - to use cache-from and cache-to argument of buildx command
      - uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # for PT 1.3 and 1.4 we need to use CUDA 10.1
      - run: |
          cuda=$(python -c "print(10.2 if float(${{matrix.pytorch_version}}) > 1.4 else 10.1)" 2>&1)
          echo "::set-output name=CUDA::$cuda"
          channel=$(python -c "print('pytorch-nightly' if float(${{matrix.pytorch_version}}) > 1.7 else 'pytorch')" 2>&1)
          echo "::set-output name=CHANNEL::$channel"
        id: extend

      - name: Publish CUDA to Docker Hub
        # ToDo: extend also building for Nightly from pip
        if: matrix.pytorch_version < 1.8
        # publish master/release
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            PYTORCH_VERSION=${{ matrix.pytorch_version }}
            CUDA_VERSION=${{ steps.extend.outputs.CUDA }}
          cache-from: pytorchlightning/pytorch_lightning:base-cuda-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }}
          cache-to: type=inline
          file: dockers/base-cuda/Dockerfile
          push: true
          tags: pytorchlightning/pytorch_lightning:base-cuda-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }}
        timeout-minutes: 55

      - name: Publish Conda to Docker Hub
        # publish master/release
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            PYTORCH_VERSION=${{ matrix.pytorch_version }}
            PYTORCH_CHANNEL=${{ steps.extend.outputs.CHANNEL }}
            CUDA_VERSION=${{ steps.extend.outputs.CUDA }}
          cache-from: pytorchlightning/pytorch_lightning:base-conda-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }}
          cache-to: type=inline
          file: dockers/base-conda/Dockerfile
          push: true
          tags: pytorchlightning/pytorch_lightning:base-conda-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }}
        timeout-minutes: 55
